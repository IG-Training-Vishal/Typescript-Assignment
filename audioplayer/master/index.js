/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./ts/index.ts":
/*!*********************!*\
  !*** ./ts/index.ts ***!
  \*********************/
/***/ (() => {

eval("\r\nvar wrapper = document.querySelector(\".wrapper\");\r\nvar wrapper2 = document.querySelector(\".wrapper2\");\r\nvar musicImg = wrapper.querySelector(\".img-area img\");\r\nvar musicName = wrapper.querySelector(\".song-details .name\");\r\nvar musicArtist = wrapper.querySelector(\".song-details .artist\");\r\nvar playPauseBtn = wrapper.querySelector(\".play-pause\");\r\nvar prevBtn = wrapper.querySelector(\"#prev\");\r\nvar nextBtn = wrapper.querySelector(\"#next\");\r\nvar mainAudio = wrapper.querySelector(\"#main-audio\");\r\nvar progressArea = wrapper.querySelector(\".progress-area\");\r\nvar progressBar = progressArea.querySelector(\".progress-bar\");\r\nvar moreMusicBtn = wrapper.querySelector(\"#more-music\");\r\nvar musicList = wrapper2.querySelector(\".playlist\");\r\nvar closemoreMusic = musicList.querySelector(\"#close\");\r\nvar ulTag = wrapper2.querySelector(\"ul\");\r\nvar allMusic = [\r\n    {\r\n        name: \"Modern Samurai\",\r\n        artist: \"FesliyanStudio\",\r\n        img: \"music-1\",\r\n        src: \"music-1\"\r\n    },\r\n    {\r\n        name: \"Chineese New Year\",\r\n        artist: \"FesliyanStudio\",\r\n        img: \"music-2\",\r\n        src: \"music-2\"\r\n    },\r\n    {\r\n        name: \"Music3\",\r\n        artist: \"Artist3\",\r\n        img: \"music-3\",\r\n        src: \"music-3\"\r\n    },\r\n    {\r\n        name: \"Music4\",\r\n        artist: \"Artist4\",\r\n        img: \"music-4\",\r\n        src: \"music-4\"\r\n    },\r\n    {\r\n        name: \"Music5\",\r\n        artist: \"Artist5\",\r\n        img: \"music-5\",\r\n        src: \"music-5\"\r\n    },\r\n    {\r\n        name: \"Music6\",\r\n        artist: \"Artist6\",\r\n        img: \"music-6\",\r\n        src: \"music-6\"\r\n    },\r\n];\r\nvar musicIndex = 0;\r\n// let musicIndex = Math.floor((Math.random() * allMusic.length) + 1);\r\nvar isMusicPaused = true;\r\nwindow.addEventListener(\"load\", function () {\r\n    loadMusic(musicIndex);\r\n    playingSong();\r\n    // rotateAnimation(\"picture\",20);\r\n});\r\nfunction loadMusic(indexNumb) {\r\n    musicName.innerText = allMusic[indexNumb - 1].name;\r\n    musicArtist.innerText = allMusic[indexNumb - 1].artist;\r\n    musicImg.src = \"thumbnail/\" + allMusic[indexNumb - 1].src + \".jpg\";\r\n    mainAudio.src = \"songs/\" + allMusic[indexNumb - 1].src + \".mp3\";\r\n}\r\nfunction playMusic() {\r\n    wrapper.classList.add(\"paused\");\r\n    playPauseBtn.innerText = \"pause\";\r\n    mainAudio.play();\r\n}\r\nfunction pauseMusic() {\r\n    wrapper.classList.remove(\"paused\");\r\n    playPauseBtn.innerText = \"play_arrow\";\r\n    mainAudio.pause();\r\n}\r\nfunction prevMusic() {\r\n    musicIndex < 1 ? musicIndex = allMusic.length : musicIndex--;\r\n    loadMusic(musicIndex);\r\n    playMusic();\r\n    playingSong();\r\n}\r\nfunction nextMusic() {\r\n    musicIndex > allMusic.length ? musicIndex = 1 : musicIndex++;\r\n    loadMusic(musicIndex);\r\n    playMusic();\r\n    playingSong();\r\n}\r\nplayPauseBtn.addEventListener(\"click\", function () {\r\n    var isMusicPlay = wrapper.classList.contains(\"paused\");\r\n    isMusicPlay ? pauseMusic() : playMusic();\r\n    playingSong();\r\n});\r\nprevBtn.addEventListener(\"click\", function () {\r\n    prevMusic();\r\n});\r\nnextBtn.addEventListener(\"click\", function () {\r\n    nextMusic();\r\n});\r\nmainAudio.addEventListener(\"timeupdate\", function (e) {\r\n    var currentTime = e.target.currentTime;\r\n    var duration = e.target.duration;\r\n    var progressWidth = (currentTime / duration) * 100;\r\n    progressBar.style.width = progressWidth + \"%\";\r\n    var musicCurrentTime = wrapper.querySelector(\".current-time\");\r\n    var musicDuration = wrapper.querySelector(\".max-duration\");\r\n    mainAudio.addEventListener(\"loadeddata\", function () {\r\n        var mainAdDuration = mainAudio.duration;\r\n        var totalMin = Math.floor(mainAdDuration / 60);\r\n        var totalSec = Math.floor(mainAdDuration % 60);\r\n        if (totalSec < 10) {\r\n            totalSec = \"0\" + totalSec;\r\n        }\r\n        musicDuration.innerText = totalMin + \":\" + totalSec;\r\n    });\r\n    var currentMin = Math.floor(currentTime / 60);\r\n    var currentSec = Math.floor(currentTime % 60);\r\n    if (currentSec < 10) {\r\n        currentSec = \"0\" + currentSec;\r\n    }\r\n    musicCurrentTime.innerText = currentMin + \":\" + currentSec;\r\n});\r\nprogressArea.addEventListener(\"click\", function (e) {\r\n    var progressWidth = progressArea.clientWidth;\r\n    var clickedOffsetX = e.offsetX;\r\n    var songDuration = mainAudio.duration;\r\n    mainAudio.currentTime = (clickedOffsetX / progressWidth) * songDuration;\r\n    playMusic();\r\n    playingSong();\r\n});\r\nmoreMusicBtn.addEventListener(\"click\", function () {\r\n    musicList.classList.toggle(\"show\");\r\n});\r\nclosemoreMusic.addEventListener(\"click\", function () {\r\n    moreMusicBtn.click();\r\n});\r\nvar _loop_1 = function (i) {\r\n    var liTag = \"<li li-index=\\\"\" + (i + 1) + \"\\\">\\n                <div class=\\\"row\\\">\\n                  <span>\" + allMusic[i].name + \"</span>\\n                  <p>\" + allMusic[i].artist + \"</p>\\n                </div>\\n                <span id=\\\"\" + allMusic[i].src + \"\\\" class=\\\"audio-duration\\\">3:40</span>\\n                <audio class=\\\"\" + allMusic[i].src + \"\\\" src=\\\"songs/\" + allMusic[i].src + \".mp3\\\"></audio>\\n              </li>\";\r\n    ulTag.insertAdjacentHTML(\"beforeend\", liTag);\r\n    var liAudioDurationTag = ulTag.querySelector(\"#\" + allMusic[i].src);\r\n    var liAudioTag = ulTag.querySelector(\".\" + allMusic[i].src);\r\n    liAudioTag.addEventListener(\"loadeddata\", function () {\r\n        var duration = liAudioTag.duration;\r\n        var totalMin = Math.floor(duration / 60);\r\n        var totalSec = Math.floor(duration % 60);\r\n        if (totalSec < 10) {\r\n            totalSec = \"0\" + totalSec;\r\n        }\r\n        ;\r\n        liAudioDurationTag.innerText = totalMin + \":\" + totalSec;\r\n        liAudioDurationTag.setAttribute(\"t-duration\", totalMin + \":\" + totalSec);\r\n    });\r\n};\r\nfor (var i = 0; i < allMusic.length; i++) {\r\n    _loop_1(i);\r\n}\r\nfunction clicked(element) {\r\n    var getLiIndex = element.getAttribute(\"li-index\");\r\n    musicIndex = getLiIndex;\r\n    loadMusic(musicIndex);\r\n    playMusic();\r\n    playingSong();\r\n}\r\nvar repeatBtn = wrapper.querySelector(\"#repeat-plist\");\r\nrepeatBtn.addEventListener(\"click\", function () {\r\n    var getText = repeatBtn.innerText;\r\n    switch (getText) {\r\n        case \"repeat\":\r\n            repeatBtn.innerText = \"repeat_one\";\r\n            repeatBtn.setAttribute(\"title\", \"Song looped\");\r\n            break;\r\n        case \"repeat_one\":\r\n            repeatBtn.innerText = \"shuffle\";\r\n            repeatBtn.setAttribute(\"title\", \"Playback shuffled\");\r\n            break;\r\n        case \"shuffle\":\r\n            repeatBtn.innerText = \"repeat\";\r\n            repeatBtn.setAttribute(\"title\", \"Playlist looped\");\r\n            break;\r\n    }\r\n});\r\nmainAudio.addEventListener(\"ended\", function () {\r\n    var getText = repeatBtn.innerText;\r\n    switch (getText) {\r\n        case \"repeat\":\r\n            nextMusic();\r\n            break;\r\n        case \"repeat_one\":\r\n            mainAudio.currentTime = 0;\r\n            loadMusic(musicIndex);\r\n            playMusic();\r\n            break;\r\n        case \"shuffle\":\r\n            var randIndex = Math.floor((Math.random() * allMusic.length) + 1);\r\n            do {\r\n                randIndex = Math.floor((Math.random() * allMusic.length) + 1);\r\n            } while (musicIndex == randIndex);\r\n            musicIndex = randIndex;\r\n            loadMusic(musicIndex);\r\n            playMusic();\r\n            playingSong();\r\n            break;\r\n    }\r\n});\r\nfunction playingSong() {\r\n    var allLiTag = ulTag.querySelectorAll(\"li\");\r\n    for (var j = 0; j < allLiTag.length; j++) {\r\n        var audioTag = allLiTag[j].querySelector(\".audio-duration\");\r\n        if (allLiTag[j].classList.contains(\"playing\")) {\r\n            allLiTag[j].classList.remove(\"playing\");\r\n            var adDuration = audioTag.getAttribute(\"t-duration\");\r\n            audioTag.innerText = adDuration;\r\n        }\r\n        if (allLiTag[j].getAttribute(\"li-index\") == String(musicIndex)) {\r\n            allLiTag[j].classList.add(\"playing\");\r\n            // audioTag.innerText = musicCurrentTime.innerText = `${currentMin}:${currentSec}`;\r\n            audioTag.innerText = \"Playing\";\r\n        }\r\n        allLiTag[j].setAttribute(\"onclick\", \"clicked(this)\");\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://audioplayer/./ts/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./ts/index.ts"]();
/******/ 	
/******/ })()
;